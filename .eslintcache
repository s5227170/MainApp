[{"D:\\Uni_Work\\React\\e-com\\src\\index.tsx":"1","D:\\Uni_Work\\React\\e-com\\src\\reportWebVitals.ts":"2","D:\\Uni_Work\\React\\e-com\\src\\App.tsx":"3","D:\\Uni_Work\\React\\e-com\\src\\firebase\\config.ts":"4","D:\\Uni_Work\\React\\e-com\\src\\store\\index.ts":"5","D:\\Uni_Work\\React\\e-com\\src\\store\\actions\\authActions.ts":"6","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\SignUp.tsx":"7","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\ForgotPassword.tsx":"8","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\Dashboard.tsx":"9","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\SignIn.tsx":"10","D:\\Uni_Work\\React\\e-com\\src\\components\\auth\\PublicRoute.tsx":"11","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\Homepage.tsx":"12","D:\\Uni_Work\\React\\e-com\\src\\components\\auth\\PrivateRoute.tsx":"13","D:\\Uni_Work\\React\\e-com\\src\\store\\reducers\\authReducer.ts":"14","D:\\Uni_Work\\React\\e-com\\src\\store\\types.ts":"15","D:\\Uni_Work\\React\\e-com\\src\\components\\auth\\AdminRoute.tsx":"16","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Loader\\Loader.tsx":"17","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Message\\Message.tsx":"18","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\DropMenu\\DropMenu.tsx":"19","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\Header.tsx":"20","D:\\Uni_Work\\React\\e-com\\src\\store\\reducers\\productReducer.ts":"21","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Button\\Button.tsx":"22","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\Create.tsx":"23","D:\\Uni_Work\\React\\e-com\\src\\store\\actions\\productActions.ts":"24","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\List.tsx":"25","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\Update.tsx":"26","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Browser-navbar\\BrowserNavbar.tsx":"27","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\View.tsx":"28","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\Delete.tsx":"29","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\ProductManagement.tsx":"30","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Backdrop\\Backdrop.tsx":"31","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Features\\Features.tsx":"32","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\InputV2\\InputV2.tsx":"33","D:\\Uni_Work\\React\\e-com\\src\\hooks\\usePagination.tsx":"34","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\Browse.tsx":"35","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\About.tsx":"36","D:\\Uni_Work\\React\\e-com\\src\\components\\auth\\MultiRoute.tsx":"37","D:\\Uni_Work\\React\\e-com\\src\\api\\Products\\agent.ts":"38","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\ProductTable\\ProductTable.tsx":"39"},{"size":343,"mtime":1612018779553,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":2434,"mtime":1612476923103,"results":"43","hashOfConfig":"41"},{"size":603,"mtime":1608746236561,"results":"44","hashOfConfig":"41"},{"size":558,"mtime":1612812525046,"results":"45","hashOfConfig":"41"},{"size":4254,"mtime":1608655852184,"results":"46","hashOfConfig":"41"},{"size":2988,"mtime":1612458636443,"results":"47","hashOfConfig":"41"},{"size":2282,"mtime":1612458873282,"results":"48","hashOfConfig":"41"},{"size":1006,"mtime":1612472933435,"results":"49","hashOfConfig":"41"},{"size":2660,"mtime":1612460009598,"results":"50","hashOfConfig":"41"},{"size":581,"mtime":1608117899279,"results":"51","hashOfConfig":"41"},{"size":686,"mtime":1612459668495,"results":"52","hashOfConfig":"41"},{"size":578,"mtime":1608120213550,"results":"53","hashOfConfig":"41"},{"size":1395,"mtime":1608230148513,"results":"54","hashOfConfig":"41"},{"size":5162,"mtime":1612832835089,"results":"55","hashOfConfig":"41"},{"size":655,"mtime":1608138834220,"results":"56","hashOfConfig":"41"},{"size":223,"mtime":1608213861088,"results":"57","hashOfConfig":"41"},{"size":517,"mtime":1608213913540,"results":"58","hashOfConfig":"41"},{"size":1782,"mtime":1612476513001,"results":"59","hashOfConfig":"41"},{"size":2641,"mtime":1612474787584,"results":"60","hashOfConfig":"41"},{"size":3153,"mtime":1612833012564,"results":"61","hashOfConfig":"41"},{"size":555,"mtime":1612207263969,"results":"62","hashOfConfig":"41"},{"size":14678,"mtime":1612830128899,"results":"63","hashOfConfig":"41"},{"size":8099,"mtime":1612832996827,"results":"64","hashOfConfig":"41"},{"size":3773,"mtime":1612835079706,"results":"65","hashOfConfig":"41"},{"size":14882,"mtime":1612791167696,"results":"66","hashOfConfig":"41"},{"size":4384,"mtime":1612537219598,"results":"67","hashOfConfig":"41"},{"size":6324,"mtime":1612790603500,"results":"68","hashOfConfig":"41"},{"size":1650,"mtime":1612829186108,"results":"69","hashOfConfig":"41"},{"size":2585,"mtime":1612810810929,"results":"70","hashOfConfig":"41"},{"size":807,"mtime":1612203700758,"results":"71","hashOfConfig":"41"},{"size":2734,"mtime":1612472104950,"results":"72","hashOfConfig":"41"},{"size":1141,"mtime":1609967082460,"results":"73","hashOfConfig":"41"},{"size":2799,"mtime":1612835045695,"results":"74","hashOfConfig":"41"},{"size":503,"mtime":1612829158667,"results":"75","hashOfConfig":"41"},{"size":503,"mtime":1612476952751,"results":"76","hashOfConfig":"41"},{"size":349,"mtime":1612476899247,"results":"77","hashOfConfig":"41"},{"size":1366,"mtime":1612807788100,"results":"78","hashOfConfig":"41"},{"size":6051,"mtime":1612835391980,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1yfmhqu",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"82"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"82"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"82"},"D:\\Uni_Work\\React\\e-com\\src\\index.tsx",[],["183","184"],"D:\\Uni_Work\\React\\e-com\\src\\reportWebVitals.ts",[],["185","186"],"D:\\Uni_Work\\React\\e-com\\src\\App.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\firebase\\config.ts",[],"D:\\Uni_Work\\React\\e-com\\src\\store\\index.ts",[],"D:\\Uni_Work\\React\\e-com\\src\\store\\actions\\authActions.ts",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\SignUp.tsx",["187"],"import React, { FC, useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Button from '../UI/Button/Button';\r\nimport Message from '../UI/Message/Message';\r\nimport { signup, setError } from '../../store/actions/authActions';\r\nimport { RootState } from '../../store';\r\nimport classes from './stylesheets/SignUp.module.scss';\r\nimport InputV2 from '../UI/InputV2/InputV2';\r\nimport { setpage } from '../../store/actions/productActions';\r\n\r\nconst SignUp: FC = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { error } = useSelector((state: RootState) => state.auth);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n                dispatch(setError(''));\r\n            }\r\n        }\r\n    }, [error, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setpage(\"SignUp\"));\r\n    }, []);\r\n\r\n    const submitHandler = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        dispatch(signup({email, password, firstName }, () => setLoading(false)));\r\n    }\r\n\r\n    return(\r\n        <section className={classes.section}>\r\n            <div>\r\n                <h2>Sign up</h2>\r\n                <form className={classes.form} onSubmit={submitHandler}>\r\n                    {error && <Message type='danger' msg={error} />}\r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        name=\"firstName\"\r\n                        value={firstName}\r\n                        onChange={(e) => setFirstName(e.currentTarget.value)}\r\n                        placeholder=\"First name\"\r\n                        content=\"First name\"\r\n                    />\r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        placeholder=\"Email address\"\r\n                        content=\"Email address\"\r\n                    />\r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        placeholder=\"Password\"\r\n                        content=\"Password\"\r\n                    />\r\n                    <div className={classes.submit}>\r\n                        <Button text={loading ? \"Loading...\" : \"Sign up\"} disabled={loading} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SignUp;","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\ForgotPassword.tsx",["188"],"import React, { FC, useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Button from '../UI/Button/Button';\r\nimport Message from '../UI/Message/Message';\r\nimport { sendPasswordResetEmail, setError, setSuccess } from '../../store/actions/authActions';\r\nimport { RootState } from '../../store';\r\nimport classes from './stylesheets/ForgotPassword.module.scss';\r\nimport InputV2 from '../UI/InputV2/InputV2';\r\nimport { setpage } from '../../store/actions/productActions';\r\n\r\nconst ForgotPassword: FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { error, success } = useSelector((state: RootState) => state.auth);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n                dispatch(setError(''));\r\n            }\r\n            if(success){\r\n                dispatch(setSuccess(''));\r\n            }\r\n        }\r\n    }, [error, dispatch, success]);\r\n\r\n    const submitHandler = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        await dispatch(sendPasswordResetEmail(email, \"Email Sent!\"));\r\n        setLoading(false)\r\n        }\r\n\r\n    return(\r\n        <section className={classes.section}>\r\n            <div className={classes.container}>\r\n                <h2>Reset password</h2>\r\n                <form className={classes.form} onSubmit={submitHandler}>\r\n                    {error && <Message type='danger' msg={error} />}\r\n                    {success && <Message type='success' msg={success} />}\r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        placeholder=\"Email address\"\r\n                        content=\"Email address\"\r\n                    />\r\n                    <Button text={loading ? \"Loading...\" : \"Send password reset email\"} className={classes.button} disabled={loading} />\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\Dashboard.tsx",["189","190","191","192","193","194","195"],"import React, { FC, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Message from '../UI/Message/Message';\r\nimport { setSuccess } from '../../store/actions/authActions';\r\nimport { RootState } from '../../store';\r\nimport { setpage, settask } from '../../store/actions/productActions';\r\nimport classes from'./stylesheets/Dashboard.module.scss';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst Dashboard: FC = () => {\r\n    const { user, needVerification, success } = useSelector((state: RootState) => state.auth);\r\n    const { task } = useSelector ((state: RootState) => state.prod);\r\n    const dispatch=useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            dispatch(setSuccess(''));\r\n        }\r\n    }, [success, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setpage(\"Dashboard\"));\r\n    }, []);\r\n\r\n    return (\r\n        <section className={classes.section}>\r\n            \r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\SignIn.tsx",["196"],"import React, { FC, useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Button from '../UI/Button/Button';\r\nimport Message from '../UI/Message/Message';\r\nimport { signin, setError } from '../../store/actions/authActions';\r\nimport { RootState } from '../../store';\r\nimport classes from './stylesheets/SignIn.module.scss';\r\nimport InputV2 from '../UI/InputV2/InputV2';\r\nimport { setpage } from '../../store/actions/productActions';\r\n\r\n\r\nconst SignIn: FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { error } = useSelector((state: RootState) => state.auth);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n                dispatch(setError(''));\r\n            }\r\n        }\r\n    }, [error, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setpage(\"SignIn\"));\r\n    }, []);\r\n\r\n    const submitHandler = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        dispatch(signin({email, password}, () => setLoading(false)));\r\n    }\r\n\r\n    return(\r\n        <section className={classes.section}>\r\n            <div>\r\n                <h2>Sign in</h2>\r\n                <form  onSubmit={submitHandler}>\r\n                    {error && <Message type='danger' msg={error} />}\r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        placeholder=\"Email address\"\r\n                        content=\"Email address\"\r\n                    />\r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        placeholder=\"Password\"\r\n                        content=\"Password\"\r\n                    />\r\n                    <p><NavLink to=\"/forgot-password\">Forgot Password</NavLink></p>\r\n                    <div className={classes.submit}>\r\n                        <Button text={loading ? \"Loading...\" : \"Sign In\"} disabled={loading} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SignIn;","D:\\Uni_Work\\React\\e-com\\src\\components\\auth\\PublicRoute.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\Homepage.tsx",["197","198"],"import React, { FC, useEffect } from 'react';\r\nimport { setpage } from '../../store/actions/productActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport classes from './stylesheets/Homepage.module.scss';\r\n\r\nconst Homepage: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setpage(\"/\"));\r\n    }, []);\r\n    \r\n    return(\r\n        <section className={classes.section}>\r\n            <div className=\"container\">\r\n                <h1 className=\"title has-text-centered is-size-1 mb-6\">Wellcome</h1>\r\n                <h2>Insert some data here</h2>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Homepage;","D:\\Uni_Work\\React\\e-com\\src\\components\\auth\\PrivateRoute.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\store\\reducers\\authReducer.ts",["199"],"import { AuthAction, AuthState, SET_USER, SET_LOADING, SIGN_OUT, SET_ERROR, NEED_VERIFICATION, SET_SUCCESS } from '../types'\r\n\r\nconst initialState: AuthState = {\r\n    user: null,\r\n    authenticated: false,\r\n    admin: false,\r\n    loading: false,\r\n    error: '',\r\n    needVerification: false,\r\n    success: ''\r\n}\r\n\r\nexport default ( state = initialState, action: AuthAction) => {\r\n    switch(action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                authenticated: true,\r\n                admin: action.payload.admin\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case SIGN_OUT:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                authenticated: false,\r\n                loading: false\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case NEED_VERIFICATION:\r\n            return {\r\n                ...state,\r\n                needVerification: true\r\n            }\r\n        case SET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}","D:\\Uni_Work\\React\\e-com\\src\\store\\types.ts",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\auth\\AdminRoute.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Loader\\Loader.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Message\\Message.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\DropMenu\\DropMenu.tsx",["200","201","202","203"],"import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {  useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {  signout } from '../../../store/actions/authActions';\r\nimport classes from './DropMenu.module.scss';\r\nimport { RootState } from '../../../store';\r\n\r\nconst DropMenu: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { page } = useSelector((state: RootState) => state.prod);\r\n    const { admin } = useSelector((state: RootState) => state.auth)\r\n\r\n    const logoutClickHandler = () => {\r\n        dispatch(signout());\r\n    }\r\n\r\n    return(\r\n        <div className={classes[\"menu-items-case\"]}>\r\n                {page==\"Dashboard\" ?\r\n                    <NavLink activeClassName={classes.active} to=\"/Dashboard\" >Home</NavLink>\r\n                : \r\n                    <NavLink to=\"/Dashboard\" >Home</NavLink>}\r\n                {admin ?\r\n                    page==\"ProductManagement\" ?\r\n                        <NavLink activeClassName={classes.active} to=\"/product-management\" >Admin Panel</NavLink>\r\n                    : \r\n                        <NavLink  to=\"../product-management\" >Admin Panel</NavLink>\r\n                :\r\n                    null\r\n                }\r\n                {page==\"Browse\" ?\r\n                    <NavLink activeClassName={classes.active} to=\"/Browse\" >Browse</NavLink>\r\n                : \r\n                    <NavLink to=\"/Browse\" >Browse</NavLink>}\r\n                {page==\"About\" ?\r\n                    <NavLink activeClassName={classes.active} to=\"/About\" >About</NavLink>\r\n                : \r\n                    <NavLink to=\"/About\" >About</NavLink>}\r\n                <NavLink to=\"\" onClick={logoutClickHandler}>SignOut</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropMenu;\r\n","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\Header.tsx",["204","205","206","207","208","209"],"import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport logo from '../../static/img/logo.png';\r\nimport DropMenu from '../UI/DropMenu/DropMenu';\r\nimport { RootState } from '../../store';\r\nimport { signout } from '../../store/actions/authActions';\r\nimport classes from './stylesheets/Header.module.scss';\r\n\r\n\r\nconst Header: FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authenticated } = useSelector((state: RootState) => state.auth);\r\n    const { page } = useSelector((state: RootState) => state.prod);\r\n\r\n    const logoutClickHandler = () => {\r\n        dispatch(signout());\r\n    }\r\n    return(\r\n        <nav>\r\n            <div className={classes.section}>\r\n                <div className={classes.navbarLogo}>\r\n                    <NavLink activeClassName={classes.logoLink} to={!authenticated ? \"/\" : \"/dashboard\"}><img className={classes.logo}  src={logo} alt=\"logo\"/></NavLink>\r\n                </div>\r\n\r\n                <div className={classes.navbarEnd}>\r\n                    {!authenticated ? \r\n                        <div className={classes.links}>\r\n                        {page==\"/\" ?\r\n                            <NavLink activeClassName={classes.active} to=\"/\" exact>Main Page</NavLink>\r\n                        : \r\n                            <NavLink to=\"/\" >Main Page</NavLink>}\r\n                        {page==\"Browse\" ?\r\n                            <NavLink activeClassName={classes.active} to=\"/Browse\" >Browse</NavLink>\r\n                        : \r\n                            <NavLink to=\"/Browse\" >Browse</NavLink>}\r\n                        {page==\"About\" ?\r\n                            <NavLink activeClassName={classes.active} to=\"/About\" >About</NavLink>\r\n                        : \r\n                            <NavLink to=\"/About\" >About</NavLink>}\r\n                        {page==\"SignUp\" ?\r\n                            <NavLink activeClassName={classes.active} to=\"/Signup\" >SignUp</NavLink>\r\n                        : \r\n                            <NavLink className={classes.signUp} to=\"/Signup\" >SignUp</NavLink>}\r\n                        {page==\"SignIn\" ?\r\n                            <NavLink activeClassName={classes.active} to=\"/Singin\" >SignIn</NavLink>\r\n                        : \r\n                            <NavLink className={classes.signIn} to=\"/Signin\" >SignIn</NavLink>}\r\n                        </div>\r\n                        :\r\n                        <DropMenu />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","D:\\Uni_Work\\React\\e-com\\src\\store\\reducers\\productReducer.ts",["210","211"],"import { ProductAction, ProductState, SET_BACKDROP, SET_TASK, SET_PAGE, SET_PRODUCT, CREATE_PRODUCT, UPDATE_PRODUCT, DELETE_PRODUCT, VIEW_PRODUCT, LIST_PRODUCT, SET_LOADING, SET_ERROR, SET_ID, SET_FEATURE_ARRAY, SET_IDS_ARRAY, SET_PRODUCT_LOADING, SET_PRODUCT_FAIL, CREATE_STOCK, SET_STOCK, LIST_STOCK } from '../types';\r\n\r\nconst initialState: ProductState = {\r\n    itemIDs: [],\r\n    stock: null,\r\n    product: null,\r\n    error: '',\r\n    loading: false,\r\n    product_array: null,\r\n    stock_array: null,\r\n    task: \"\",\r\n    page: \"\",\r\n    backdrop: false,\r\n    feature_array: [],\r\n}\r\n\r\nexport default ( state = initialState, action: ProductAction) => {\r\n    switch(action.type) {\r\n        case SET_IDS_ARRAY:\r\n            return {\r\n                ...state,\r\n                itemIDs: action.payload\r\n            }\r\n        case SET_FEATURE_ARRAY:\r\n            return {\r\n                ...state,\r\n                feature_array: action.payload\r\n            }\r\n        case SET_BACKDROP:\r\n            return {\r\n                ...state,\r\n                backdrop: action.payload\r\n            }\r\n        case SET_ID:\r\n            return {\r\n                ...state,\r\n                id: action.payload\r\n            }\r\n        case CREATE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product: action.payload \r\n            }\r\n        case SET_TASK:\r\n            return{\r\n                ...state,\r\n                task: action.payload,\r\n            }\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.payload\r\n            }\r\n        case SET_PRODUCT:\r\n            return{\r\n                ...state,\r\n                product: action.payload\r\n            }\r\n        case SET_PRODUCT_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: action.payload\r\n                }\r\n        case UPDATE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product: action.payload\r\n            }\r\n        case DELETE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                id: action.payload\r\n            }\r\n        case VIEW_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product: action.payload\r\n            }\r\n        case LIST_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product_array: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case SET_STOCK:\r\n            return {\r\n                ...state,\r\n                stock: action.payload\r\n            }\r\n        case CREATE_STOCK:\r\n            return {\r\n                ...state,\r\n                stock: action.payload\r\n            }\r\n        case LIST_STOCK:\r\n            return {\r\n                ...state,\r\n                stock_array: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Button\\Button.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\Create.tsx",["212","213","214","215","216","217","218","219"],"import React, { FC, useState, useEffect, FormEvent, ChangeEvent} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nimport firebase from '../../../firebase/config';\r\nimport Button from '../Button/Button';\r\nimport Message from '../Message/Message';\r\nimport { RootState } from '../../../store';\r\nimport { createproduct, createstock, deletefeature, setfeature, settask } from '../../../store/actions/productActions';\r\nimport { setError } from '../../../store/actions/productActions';\r\nimport {  useHistory } from 'react-router';\r\nimport Features from '../Features/Features';\r\nimport InputV2 from '../InputV2/InputV2';\r\nimport classes from './stylesheets/Create.module.scss';\r\nimport style from './stylesheets/Create.module.scss';\r\n\r\nconst Create: FC = () => {\r\n    //Change all separate states to a single object one.\r\n    //Do the List next, will be in its own component and will be listed \r\n    //in its component, it will load whenever the product-management\r\n    //is loaded and create will load upon click of a span element.\r\n    \r\n    const [fileSelected, setFileSelected] = useState<File>();\r\n    const [loading, setLoading] = useState(false);\r\n    const [validationLoading, setValidationLoading] = useState(false);\r\n    //-------------\r\n    //Disable inputs as validation\r\n    const [loading2, setLoading2] = useState(true);\r\n    const [loading3, setLoading3] = useState(false);\r\n    //input value to be dispatched\r\n    const [currentWord, setCurrentWord] = useState(\"\");\r\n    //helps with the validation management\r\n    const [filled, setFilled] = useState(true);\r\n    //controlls the amount of inputs and validates\r\n    const [amount, setAmount] = useState(0);\r\n    //-------------\r\n    const [title, setTitle] = useState('');\r\n    const [type, setType]= useState(\"\");\r\n    const [description, setDescription] = useState('');\r\n    const [avatar, setAvatar] = useState(\"\");\r\n    const [price, setPrice] = useState(0);\r\n    const [reduced, setReduced] = useState(\"false\");\r\n    const [old_price, setOldPrice] = useState(0);\r\n    const [new_price, setNewPrice] = useState(0);\r\n    const [fire, setFire] = useState(false);\r\n    //\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { error } = useSelector((state: RootState) => state.prod);\r\n    const { feature_array } = useSelector((state: RootState) => state.prod);\r\n    const { stock } = useSelector((state: RootState) => state.prod)\r\n    //\r\n\r\n    useEffect(() => {\r\n        dispatch(deletefeature(feature_array))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n                dispatch(setError(''));\r\n            }\r\n        }\r\n    }, [error, dispatch]);\r\n\r\n    const submitHandler = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        setValidationLoading(true)\r\n\r\n        if(amount <3){\r\n            alert(\"You need at least 3 features in order to submit this product! If there already are 3, save themand try submitting again.\")\r\n        }else if(!fileSelected){\r\n            alert(\"Product needs to have an avatar!\")\r\n        }else if(price > 10000 || price <=0){\r\n            alert(\"Price needs to be between 1 and 10000!\")\r\n        }else{    \r\n            //const file = fileSelected;\r\n            if(!fileSelected) return;\r\n            \r\n            const storageRef = firebase.storage().ref('/images/');\r\n            const fileRef = storageRef.child(fileSelected.name)\r\n            const currentTime = new Date();\r\n            const date = String(currentTime.getDate() + (currentTime.getMonth() + 1) + currentTime.getFullYear());\r\n            console.log(date)\r\n            await fileRef.put(fileSelected)\r\n            const fileURL = await fileRef.getDownloadURL()\r\n            \r\n\r\n            setLoading(true);\r\n            let id=uuid();\r\n            if(feature_array){\r\n                    dispatch(createproduct({id, title, type, feature_array, fire, description, avatar: fileURL, price, reduced, old_price, new_price, date }));\r\n                    dispatch(createstock(stock))\r\n            }\r\n            setTimeout(() => {\r\n                dispatch(settask(\"\"))\r\n            }, 1500);\r\n        }\r\n    }\r\n\r\n\r\n    const reducedHandler = (e: FormEvent<HTMLSelectElement>) => {\r\n        e.preventDefault();\r\n        if(e.currentTarget.value == \"Reduced price\"){\r\n            setReduced(\"true\");\r\n        } else{\r\n            setReduced(\"false\");\r\n        }\r\n    }\r\n\r\n    const fileSelectedHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const filelist = e.target.files;\r\n        if(!filelist) return;        \r\n        setFileSelected(filelist[0]);        \r\n    }\r\n\r\n    const returnHandler = () => {\r\n        dispatch(settask(\"\"));\r\n    }\r\n\r\n\r\n    const addFeature = () => {\r\n        if(amount>=15){\r\n            alert(\"Maximum features reached!\")\r\n        }else if(!filled){\r\n            alert(\"Fill existing feature and save!\")\r\n        }\r\n        else{\r\n            setLoading3(true)\r\n            setLoading2(false);\r\n            setFilled(false);\r\n            setAmount(amount+1);\r\n        }\r\n    }\r\n\r\n    const removeFeature = () => {\r\n        if(amount > 0){\r\n            setAmount(amount-1);\r\n            dispatch(deletefeature(feature_array))\r\n        }\r\n    }\r\n\r\n    const str = function(target: number){\r\n        return target.toString();\r\n    } \r\n\r\n    const check = function(amount: number) {\r\n        amount=amount-1;\r\n        const target: string=\"feats\".concat(str(amount))\r\n        document.getElementById(target)?.setAttribute(\"disabled\", \"true\");\r\n\r\n    }\r\n\r\n    const saveFeature = () => {\r\n        check(amount);\r\n        setLoading3(false);\r\n        setLoading2(true)\r\n        dispatch(setfeature(currentWord, feature_array));\r\n        setFilled(true)\r\n        \r\n    }\r\n\r\n    const inputDataHandler = ({target}: {target: EventTarget | null}) => {\r\n        const {value} = target as HTMLInputElement\r\n        setCurrentWord(value)\r\n    }            \r\n\r\n    const clickFileUpldHandler = () => {\r\n        document.getElementById(\"real-file\")?.click();\r\n    }\r\n\r\n    const fireHandler = () => {\r\n        setFire(!fire);\r\n    }\r\n\r\n    return(\r\n        <div className={classes.section}>\r\n            \r\n            <div className={classes.return} onClick={returnHandler}>\r\n                <span className=\"material-icons md-36\" id={style[\"return-icon\"]}>\r\n                    keyboard_return\r\n                </span>\r\n            </div>\r\n\r\n            <h2>Enter product details</h2>\r\n                <h3>Features</h3>\r\n                <hr className={classes.divider}></hr>\r\n                <div className={classes.featureManagement}>\r\n                    {/* Buttons controlling the feature amount */}\r\n                    <Button className=\"custom-btn\" text=\"Add\" onClick={addFeature} disabled={!loading2}/>\r\n                    <Button className=\"custom-btn\" text=\"Remove\" onClick={removeFeature} disabled={loading3}/>\r\n                    <Button className=\"custom-btn\" text=\"Save\" onClick={saveFeature} disabled={!loading3}/>\r\n                    {/* <button  className={style[\"custom-btn\"]} onClick={addFeature} disabled={!loading2}>Add</button>\r\n                    <button  className={style[\"custom-btn\"]} onClick={removeFeature} disabled={loading3}>Remove</button>\r\n                    <button  className={style[\"custom-btn\"]} onClick={saveFeature} disabled={!loading3}>Save</button> */}\r\n                </div>\r\n                    {/* Add the features component here, it must get the number of fields, depending on the\r\n                    parameter given, it should do this dynamically */}\r\n                        <Features ids=\"feats\" number={amount} onBlur={inputDataHandler} preview={false}/>\r\n                    {/* ---- */}\r\n                \r\n            \r\n                <h3>Product Image</h3>\r\n                <hr className={classes.divider}></hr>\r\n                <div className={classes.imageManagement}>\r\n                    <input id=\"real-file\" hidden={true}  type=\"file\" onChange={fileSelectedHandler}/>\r\n                    <button id=\"custom-button\" className={style[\"custom-btn\"]} onClick={clickFileUpldHandler} disabled={fileSelected? true : false}>{fileSelected? \"Uploaded...\" : \"Upload\"}</button>\r\n                </div>\r\n            <h3>Details</h3>\r\n            <hr className={classes.divider}></hr>\r\n            <form className={classes.form} onSubmit={submitHandler}>\r\n            {error && <Message type='danger' msg={error} />}\r\n                    <div className={classes.fireContainer}>\r\n                        <label id={style[\"fire-label\"]}>Fire</label>\r\n                        <input type=\"checkbox\" className={classes.fire} onClick={fireHandler}/>\r\n                    </div>\r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        name=\"Title\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.currentTarget.value)}\r\n                        placeholder=\"\"\r\n                        content=\"Name:\"\r\n                        required\r\n                    />\r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        name=\"Type\"\r\n                        value={type}\r\n                        onChange={(e) => setType(e.currentTarget.value)}\r\n                        placeholder=\"\"\r\n                        content=\"Type:\"\r\n                        required\r\n                    />                    \r\n                    <InputV2\r\n                        inputCasingStyle=\"input-create\"\r\n                        name=\"Description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.currentTarget.value)}\r\n                        placeholder=\"\"\r\n                        content=\"Description:\"\r\n                        required\r\n                    />\r\n                    <div className={classes.urlHide}>\r\n                        <InputV2\r\n                            inputCasingStyle=\"input-create\"\r\n                            name=\"Avatar\"\r\n                            type=\"hidden\"\r\n                            value={avatar}\r\n                            content=\"\"\r\n                        /> \r\n                    </div>         \r\n                    <div className={classes.currencyWrapper}>          \r\n                        <div className={classes.currencyInput}>\r\n                            <CurrencyFormat\r\n                            className={classes.currency} \r\n                            name=\"Price\"\r\n                            value={price}\r\n                            thousandSeparator={true} \r\n                            prefix={'£'} \r\n                            step={0.01}\r\n                            maxLength=\"7\"\r\n                            onValueChange={(values: any) => {\r\n                                const {formattedValue, value} = values;\r\n                                if(formattedValue.length <= 7){\r\n                                setPrice(formattedValue);\r\n                                }}}\r\n                            />\r\n                            <div className={classes.underline}></div>\r\n                            <label>Price</label>\r\n                        </div>\r\n                    </div>\r\n                    <select className={classes.select} name=\"Reduced\" required onChange={reducedHandler}>\r\n                        <option selected disabled defaultValue=\"Regular price\">Reduced?</option>\r\n                        <option defaultValue=\"Regular price\">Regular price</option>\r\n                        <option defaultValue=\"Reduced price\">Reduced price</option>\r\n                    </select>\r\n                    {reduced===\"false\" ?\r\n                        null\r\n                    :\r\n                        <div className=\"reduced\">\r\n                            <div className={classes.currencyWrapper}>\r\n                                <div className={classes.currencyInput}>\r\n                                    <CurrencyFormat\r\n                                        className={classes.currency} \r\n                                        name=\"old_price\"\r\n                                        value={old_price}\r\n                                        thousandSeparator={true} \r\n                                        prefix={'£'} \r\n                                        step={0.01}\r\n                                        maxLength=\"7\"\r\n                                        onValueChange={(values: any) => {\r\n                                            const {formattedValue, value} = values;\r\n                                            if(formattedValue.length <= 7){\r\n                                            setOldPrice(formattedValue);\r\n                                        }}}\r\n                                    />\r\n                                    <div className={classes.underline}></div>\r\n                                    <label>Old Price</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.currencyWrapper}>\r\n                                <div className={classes.currencyInput}>\r\n                                    <CurrencyFormat\r\n                                        className={classes.currency} \r\n                                        name=\"new_price\"\r\n                                        value={price}\r\n                                        thousandSeparator={true} \r\n                                        prefix={'£'} \r\n                                        step={0.01}\r\n                                        maxLength=\"7\"\r\n                                        onValueChange={(values: any) => {\r\n                                            const {formattedValue, value} = values;\r\n                                            if(formattedValue.length <= 7){\r\n                                            setNewPrice(formattedValue);\r\n                                        }}}\r\n                                    />\r\n                                    <div className={classes.underline}></div>\r\n                                    <label>New Price</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                    }\r\n                    <button id={style[\"submit\"]} className={style[\"custom-btn\"]} disabled={loading }>{loading ? \"Loading...\" : \"Submit\"}</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;","D:\\Uni_Work\\React\\e-com\\src\\store\\actions\\productActions.ts",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\List.tsx",["220","221","222"],"import React, { FC, useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport style from \"./stylesheets/List.module.scss\";\r\nimport ProductTable from \"../ProductTable/ProductTable\";\r\nimport { RootState } from \"../../../store\";\r\nimport {\r\n  listproducts,\r\n  setbackdrop,\r\n  setids,\r\n  liststock,\r\n} from \"../../../store/actions/productActions\";\r\nimport { Product, Stock } from \"../../../store/types\";\r\nimport classes from \"./stylesheets/List.module.scss\";\r\nimport BrowserNavbar from \"../Browser-navbar/BrowserNavbar\";\r\n\r\nconst List: FC = () => {\r\n  //\r\n  const [products, setProducts] = useState<Array<Product>>([]);\r\n  const [stocks, setStocks] = useState<Array<Stock>>([]);\r\n  const [stock, setStock] = useState(false);\r\n  const [itemID, setItemID] = useState<Array<string>>();\r\n  const [stockID, setStockId] = useState<Array<string>>();\r\n  const dispatch = useDispatch();\r\n  const { product_array } = useSelector((state: RootState) => state.prod);\r\n  const { backdrop } = useSelector((state: RootState) => state.prod);\r\n  const { stock_array } = useSelector((state: RootState) => state.prod);\r\n  useEffect(() => {\r\n    dispatch(listproducts());\r\n    dispatch(liststock());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (product_array) {\r\n      const itemIDs: any = Object.entries(product_array).map((e) => e[0]);\r\n      const toArr: any = Object.entries(product_array).map((e) => e[1]);\r\n      setProducts(toArr);\r\n      setItemID(itemIDs);\r\n      if (itemID) dispatch(setids(itemID));\r\n    }\r\n    \r\n  }, [product_array]);\r\n\r\n  useEffect(() => {\r\n    if(stock_array) {\r\n      const stockIDs: any = Object.entries(stock_array).map((e) => e[0]);\r\n      const toArr: any = Object.entries(stock_array).map((e) => e[1]);\r\n      setStocks(toArr);\r\n      setStockId(stockIDs);\r\n    }\r\n  }, [stock_array])\r\n\r\n  const showSidebarHandler = () => {\r\n    dispatch(setbackdrop(!backdrop));\r\n  };\r\n\r\n  const RefreshHandler = () => {\r\n    dispatch(listproducts());\r\n    dispatch(liststock());\r\n  };\r\n  return (\r\n    <div className={classes.section}>\r\n      <div className={classes.mode}>\r\n        {/* Add a state taht controls which table should be showed. The data stays the same, it just gets filtered */}\r\n        <h3 className={classes['font-color']} onClick={() => (setStock(false))}>Product</h3>\r\n        <h4 className={classes['font-color']}>/</h4>\r\n        <h3 className={classes['font-color']} onClick={() => (setStock(true))}>Stock</h3>\r\n        <span\r\n          id={style[\"drop-menu\"]}\r\n          className=\"material-icons md-36\"\r\n          onClick={showSidebarHandler}\r\n        >\r\n          view_headline\r\n        </span>\r\n        <span\r\n          id={classes[\"refresh\"]}\r\n          className=\"material-icons md-36\"\r\n          onClick={RefreshHandler}\r\n        >\r\n          cached\r\n        </span>\r\n      </div>\r\n      \r\n      <h2 className={[classes['font-color'], classes['header']].join(' ')}>{stock? \"Stock menu\" : \"Product menu\"}</h2>\r\n      {backdrop ? <BrowserNavbar stock={stock}/> : null}\r\n\r\n      {/* Fix pagination - when having more pages, the span gets bugged, problem is probably a typo when watching the video, redo it */}\r\n      {!stock ? (\r\n        <ProductTable\r\n          data={products}\r\n          itemsPerPage={10}\r\n          startFrom={0}\r\n          fields={[\"title\", \"type\", \"reduced\", \"price\"]}\r\n          columns={[\"Title\", \"Type\", \"Reduced\", \"Price\"]}\r\n        />\r\n      ) : ( \r\n        <ProductTable\r\n          data={stocks}\r\n          itemsPerPage={10}\r\n          startFrom={0}\r\n          fields={[\"product\", \"type\", \"quantity\", \"fire\", \"sold\"]}\r\n          columns={[\"Name\", \"Type\", \"Quantity\", \"Fire\", \"Sold\"]}\r\n          stock={stock}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\Update.tsx",["223","224","225","226","227","228","229","230"],"import React, { FC, useState, useEffect, ChangeEvent, FormEvent } from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nimport Button from '../Button/Button';\r\nimport Message from '../Message/Message';\r\nimport { RootState } from '../../../store';\r\nimport { deletefeature, setError, setfeature, settask, updateproduct } from '../../../store/actions/productActions';\r\nimport firebase from '../../../firebase/config';\r\nimport classes from './stylesheets/Update.module.scss';\r\nimport style from './stylesheets/Update.module.scss';\r\nimport { Product } from '../../../store/types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Features from '../Features/Features';\r\nimport InputV2 from '../InputV2/InputV2';\r\n\r\nconst Update: FC<Product> = (Product) => {\r\n    //Helper states\r\n    const [fileSelected, setFileSelected] = useState<File>();\r\n    const [loading, setLoading] = useState(false);\r\n    const [validationLoading, setValidationLoading] = useState(false);\r\n    //Feature management\r\n    //Disable inputs as validation\r\n    const [loading2, setLoading2] = useState(true);\r\n    const [loading3, setLoading3] = useState(false);\r\n    //controlls the amount of inputs and validates\r\n    const [amount, setAmount] = useState(0);\r\n    //helps with the validation management\r\n    const [filled, setFilled] = useState(true);\r\n    //input value to be dispatched\r\n    const [currentWord, setCurrentWord] = useState(\"\");\r\n    //Product attributes\r\n    const [title, setTitle] = useState(Product.title);\r\n    const [type, setType]= useState(Product.type);\r\n    const [description, setDescription] = useState(Product.description);\r\n    const [avatar, setAvatar] = useState<string>(Product.avatar);\r\n    const [price, setPrice] = useState(Product.price);\r\n    const [reduced, setReduced] = useState(Product.reduced);\r\n    const [old_price, setOldPrice] = useState(Product.old_price);\r\n    const [new_price, setNewPrice] = useState(Product.new_price);\r\n    const [features, setFeatures] = useState(0)\r\n    const [feature_array_existing, setFeatureArray_existing] = useState(Product.feature_array)\r\n    const [fire, setFire] = useState(Product.fire)\r\n    //\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { error } = useSelector((state: RootState) => state.prod);\r\n    const { id } = useSelector((state: RootState) => state.prod);\r\n    const { feature_array } = useSelector((state: RootState) => state.prod);\r\n    console.log(id)\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n                dispatch(setError(''));\r\n            }\r\n        }\r\n    }, [error, dispatch]);\r\n\r\n    useEffect(() => {\r\n        setFeatures(feature_array_existing.length);\r\n    }, [])\r\n\r\n    const submitHandler = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        setValidationLoading(true)\r\n\r\n        if(features < 3 || amount < 3){\r\n            alert(\"You need at least 3 features in order to submit this product! If there already are 3, save themand try submitting again.\")\r\n        }else if(!Product.avatar){\r\n            alert(\"Product needs to have an avatar!\")\r\n        }else{    \r\n            //const file = fileSelected;\r\n            const date = Product.date;\r\n            if(fileSelected ){\r\n                const storageRef = firebase.storage().ref('/images/');\r\n                const fileRef = storageRef.child(fileSelected.name)\r\n                await fileRef.put(fileSelected)\r\n                const fileURL = await fileRef.getDownloadURL()\r\n            setLoading(true);\r\n        dispatch(updateproduct(id, {id: Product.id, title, type, feature_array, fire, description, avatar: fileURL , price, reduced, old_price, new_price, date }, () => setLoading(false)));\r\n            }else if(Product.avatar) {\r\n                setLoading(true);\r\n                dispatch(updateproduct(id, {id: Product.id, title, type, feature_array, fire, description, avatar: Product.avatar, price, reduced, old_price, new_price, date }, () => setLoading(false)));\r\n            }\r\n        setTimeout(() => {\r\n            history.goBack();\r\n        }, 1500);\r\n    }\r\n    }\r\n\r\n    const reducedHandler = (e: FormEvent<HTMLSelectElement>) => {\r\n        e.preventDefault();\r\n        if(e.currentTarget.value){\r\n            setReduced(\"true\");\r\n        } else{\r\n            setReduced(\"false\");\r\n        }\r\n    }\r\n\r\n    const fileSelectedHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const filelist = e.target.files;\r\n        if(!filelist) return;\r\n        \r\n        setFileSelected(filelist[0]);        \r\n    }\r\n\r\n    const returnHandler = () => {\r\n        dispatch(settask(\"\"));\r\n    }\r\n\r\n    const addFeature = () => {\r\n        if(amount>=15){\r\n            alert(\"Maximum features reached!\")\r\n        }else if(!filled){\r\n            alert(\"Fill existing feature and save!\")\r\n        }\r\n        else{\r\n            setLoading3(true)\r\n            setLoading2(false);\r\n            setFilled(false);\r\n            setAmount(amount+1);\r\n            setFeatures(features+1)\r\n        }\r\n        \r\n    }\r\n\r\n    const removeFeature = () => {\r\n        if(amount > 0){\r\n            setAmount(amount-1);\r\n            setFeatures(features-1)\r\n            dispatch(deletefeature(feature_array))\r\n        }\r\n    }\r\n\r\n    const str = function(target: number){\r\n        return target.toString();\r\n    } \r\n\r\n    const check = function(amount: number) {\r\n        amount=amount-1;\r\n        const target: string=\"feats\".concat(str(amount))\r\n        document.getElementById(target)?.setAttribute(\"disabled\", \"true\");\r\n\r\n    }\r\n\r\n    const saveFeature = () => {\r\n        check(amount);\r\n        setLoading3(false);\r\n        setLoading2(true)\r\n        dispatch(setfeature(currentWord, feature_array));\r\n        setFilled(true)\r\n        \r\n    }\r\n\r\n    const inputDataHandler = ({target}: {target: EventTarget | null}) => {\r\n        const {value} = target as HTMLInputElement\r\n        setCurrentWord(value)\r\n    } \r\n\r\n    const clickFileUpldHandler = () => {\r\n        document.getElementById(\"real-file\")?.click();\r\n    }\r\n\r\n    const fireHandler = () => {\r\n        setFire(!fire);\r\n        console.log(fire)\r\n    }\r\n\r\n    return(\r\n            <div className={classes.section}>\r\n                <div className={classes.return} onClick={returnHandler}>\r\n                    <span className=\"material-icons md-36\" id={style[\"return-icon\"]}>\r\n                        keyboard_return\r\n                    </span>\r\n                </div>\r\n                <h2>Enter new product details</h2>\r\n                <h3>Enter product features</h3>\r\n                    <hr className={classes.divider}></hr>\r\n                    <div className={classes.featureManagement}>\r\n                        {/* Buttons controlling the feature amount */}\r\n                        <button id={style[\"feat-btn\"]} className={style[\"img-upld-btn\"]} onClick={addFeature} disabled={!loading2}>Add Feature</button>\r\n                        <button  className={style[\"img-upld-btn\"]} onClick={removeFeature} disabled={loading3}>Remove Feature</button>\r\n                        <button  className={style[\"img-upld-btn\"]} onClick={saveFeature} disabled={!loading3}>Save Features</button>\r\n                    </div>\r\n                    <Features featsNumber={features} feats={Product.feature_array} ids=\"feats\" number={amount} onBlur={inputDataHandler} preview={false} update/>\r\n\r\n                    <br/>\r\n                    <h3>Upload a product image</h3>\r\n                    <hr className={classes.divider}></hr>\r\n                    <div className={classes.imageManagement}>\r\n                        <input id=\"real-file\" hidden={true}  type=\"file\" onChange={fileSelectedHandler}/>\r\n                        <button id=\"custom-button\" className={style[\"img-upld-btn\"]} onClick={clickFileUpldHandler} disabled={fileSelected? true : false}>{fileSelected? \"Uploaded...\" : \"Upload\"}</button>\r\n                        <div className={classes.imgContainer}>\r\n                            <img className={classes.imgShowcase} src={Product.avatar} alt={Product.title + \" avatar\"}/>\r\n                        </div>\r\n                    </div>\r\n                <h3>Set product details</h3>\r\n                <hr className={classes.divider}></hr>\r\n                <form className={classes.form} onSubmit={submitHandler}>\r\n                {error && <Message type='danger' msg={error} />}\r\n                <div className={classes.fireContainer}>\r\n                        <label id={style[\"fire-label\"]}>Fire</label>\r\n                            <input type=\"checkbox\" className={classes.fire} onClick={fireHandler} checked={fire}/>\r\n                        </div>\r\n                        <InputV2\r\n                            inputCasingStyle=\"input-create\"\r\n                            name=\"Title\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.currentTarget.value)}\r\n                            placeholder=\"\"\r\n                            content=\"Title\"\r\n                            required\r\n                        />\r\n                        <InputV2\r\n                            inputCasingStyle=\"input-create\"\r\n                            name=\"Type\"\r\n                            value={type}\r\n                            onChange={(e) => setTitle(e.currentTarget.value)}\r\n                            placeholder=\"\"\r\n                            content=\"Type\"\r\n                            required\r\n                        />\r\n                        <InputV2\r\n                            inputCasingStyle=\"input-create\"\r\n                            name=\"Description\"\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.currentTarget.value)}\r\n                            placeholder=\"\"\r\n                            content=\"Description\"\r\n                            required\r\n                        />\r\n                        <div className={classes.urlHide}>\r\n                        <InputV2\r\n                            inputCasingStyle=\"input-create\"\r\n                            name=\"Avatar\"\r\n                            type=\"hidden\"\r\n                            content=\"\"\r\n                            value={avatar}\r\n                        />  \r\n                        </div>                  \r\n                        <div className={classes.currencyWrapper}>          \r\n                            <div className={classes.currencyInput}>\r\n                                <CurrencyFormat\r\n                                className={classes.currency} \r\n                                name=\"Price\"\r\n                                value={price}\r\n                                thousandSeparator={true} \r\n                                prefix={'£'} \r\n                                maxLength=\"7\"\r\n                                onValueChange={(values: any) => {\r\n                                    const {formattedValue, value} = values;\r\n                                    if(formattedValue.length <= 7){\r\n                                    setPrice(formattedValue);\r\n                                    }}}\r\n                                />\r\n                                <div className={classes.underline}></div>\r\n                                <label>Price</label>\r\n                            </div>\r\n                        </div>\r\n                        <select className={classes.select} name=\"Reduced\" required onChange={reducedHandler}>\r\n                            <option selected disabled defaultValue=\"Regular price\">Reduced?</option>\r\n                            <option defaultValue=\"Regular price\">Regular price</option>\r\n                            <option defaultValue=\"Reduced price\">Reduced price</option>\r\n                        </select>\r\n                        {reduced===\"false\" ?\r\n                            null\r\n                        :\r\n                            <div className=\"reduced\">\r\n                                <div className={classes.currencyWrapper}>\r\n                                    <div className={classes.currencyInput}>\r\n                                        <CurrencyFormat\r\n                                            className={classes.currency} \r\n                                            name=\"old_price\"\r\n                                            value={old_price}\r\n                                            thousandSeparator={true} \r\n                                            prefix={'£'} \r\n                                            maxLength=\"7\"\r\n                                            onValueChange={(values: any) => {\r\n                                                const {formattedValue, value} = values;\r\n                                                if(formattedValue.length <= 7){\r\n                                                setOldPrice(formattedValue);\r\n                                            }}}\r\n                                        />\r\n                                        <div className={classes.underline}></div>\r\n                                        <label>Old Price</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.currencyWrapper}>\r\n                                    <div className={classes.currencyInput}>\r\n                                        <CurrencyFormat\r\n                                            className={classes.currency} \r\n                                            name=\"new_price\"\r\n                                            value={new_price}\r\n                                            thousandSeparator={true} \r\n                                            prefix={'£'} \r\n                                            maxLength=\"7\"\r\n                                            onValueChange={(values: any) => {\r\n                                                const {formattedValue, value} = values;\r\n                                                if(formattedValue.length <= 7){\r\n                                                setNewPrice(formattedValue);\r\n                                            }}}\r\n                                        />\r\n                                        <div className={classes.underline}></div>\r\n                                        <label>New Price</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n                        <Button className={classes.submit} text={loading ? \"Loading...\" : \"Submit\"} disabled={loading} />\r\n                </form>\r\n                <div className={classes.underpageSpace}>\r\n\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Update;","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Browser-navbar\\BrowserNavbar.tsx",["231","232","233","234"],"import Rreact, { FC, useEffect, useState } from 'react';\r\nimport { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../store';\r\nimport { settask } from '../../../store/actions/productActions';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nimport classes from './BrowserNavbar.module.scss';\r\nimport styles from './BrowserNavbar.module.scss';\r\n\r\ninterface Props {\r\n    stock? : boolean;\r\n}\r\n\r\nconst BrowserNavbar: FC<Props> = ({stock}) => {\r\n    const [style, setStyle] = useState(\"on\");\r\n    const dispatch = useDispatch();\r\n    const { backdrop } = useSelector((state: RootState) => state.prod);\r\n\r\n    const createHandler = () => [\r\n        dispatch(settask(\"Create\"))\r\n    ]\r\n\r\n    return(\r\n        <div>\r\n            {backdrop?\r\n            <div>\r\n                <Backdrop />\r\n                <div className={style==\"on\"? classes.BrowserNavbar : classes.Off }>\r\n                        {/* Create a component for the bottons. Each component\r\n                        will have as attributes - type(for the icon name), \r\n                        component(for the component to load on click, check routes for a tip) */}\r\n                            {!stock?\r\n                            <Fragment>\r\n                                <div className={classes.blueCrudButtons}>\r\n                                    <h3>Menu</h3>\r\n                                    <div className={classes.blueContainer}>\r\n                                        <span id={styles['option1']} className=\"material-icons md-36\" onClick={createHandler}>\r\n                                            add_box\r\n                                        </span>\r\n                                        <h4 onClick={createHandler}>Create a Product</h4>\r\n                                    </div>\r\n                                    <div className={classes.blueContainer}>\r\n                                        <span id={styles['option2']} className=\"material-icons md-36\">\r\n                                            filter_alt\r\n                                        </span>\r\n                                        <h4>Filter Products</h4>\r\n                                    </div>\r\n                                    <div className={classes.blueContainer}>\r\n                                    <span id={styles['option3']} className=\"material-icons md-36\">\r\n                                        local_fire_department\r\n                                    </span>\r\n                                    <h4>Set a hot Product</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                            :\r\n                            <Fragment>\r\n                                <div className={classes.limeCrudButtons}>\r\n                                    <h3>Menu</h3>\r\n                                    <div className={classes.limeContainer}>\r\n                                        <span id={styles['option1']} className=\"material-icons md-36\" onClick={createHandler}>\r\n                                            add_box\r\n                                        </span>\r\n                                        <h4 onClick={createHandler}>Create a Product</h4>\r\n                                    </div>\r\n                                    <div className={classes.limeContainer}>\r\n                                        <span id={styles['option2']} className=\"material-icons md-36\">\r\n                                            filter_alt\r\n                                        </span>\r\n                                        <h4>Filter Products</h4>\r\n                                    </div>\r\n                                    <div className={classes.limeContainer}>\r\n                                    <span id={styles['option3']} className=\"material-icons md-36\">\r\n                                        local_fire_department\r\n                                    </span>\r\n                                    <h4>Set a hot Product</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                            }\r\n                </div>\r\n            </div>\r\n            :\r\n            null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BrowserNavbar;","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\View.tsx",["235","236","237","238"],"import React, { FC, useState, useEffect, FormEvent } from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\n\r\nimport { RootState } from '../../../store';\r\nimport { setError, settask } from '../../../store/actions/productActions';\r\nimport { Product } from '../../../store/types';\r\nimport { useHistory } from 'react-router';\r\nimport InputV2 from '../InputV2/InputV2';\r\nimport Message from '../Message/Message';\r\nimport classes from './stylesheets/View.module.scss';\r\nimport style from './stylesheets/View.module.scss';\r\nimport Features from '../Features/Features';\r\n\r\nconst View: FC<Product> = (Product) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { error } = useSelector((state: RootState) => state.prod);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n                dispatch(setError(''));\r\n            }\r\n        }\r\n    }, [error, dispatch]);\r\n\r\n    const returnHandler = () => {\r\n        dispatch(settask(\"\"));\r\n    }\r\n\r\n    //Change to a formal View and also change it in the update section\r\n    return(\r\n        <div className={classes.section}>\r\n                <div className={classes.return} onClick={returnHandler}>\r\n                    <span className=\"material-icons md-36\" id={style[\"return-icon\"]}>\r\n                        keyboard_return\r\n                    </span>\r\n                </div>\r\n                <h1>Overview</h1>\r\n                <h3>Product features</h3>\r\n                {console.log(Product.feature_array)}\r\n                    <Features featsNumber={Product.feature_array.length} feats={Product.feature_array} ids=\"feats\" number={Product.feature_array.length} preview={true}/>\r\n\r\n                    <br/>\r\n                    <h3>Product image</h3>\r\n                    <hr className={classes.divider}></hr>\r\n                    <div className={classes.imageManagement}>\r\n                        <div className={classes.imgContainer}>\r\n                            <img className={classes.imgShowcase} src={Product.avatar} alt={Product.title + \" avatar\"}/>\r\n                        </div>\r\n                    </div>\r\n                <h3>Set product details</h3>\r\n                <hr className={classes.divider}></hr>\r\n                {error && <Message type='danger' msg={error} />}\r\n                        <InputV2\r\n                            inputCasingStyle=\"input-create\"\r\n                            name=\"Title\"\r\n                            value={Product.title}\r\n                            placeholder=\"\"\r\n                            content=\"Title\"\r\n                            \r\n                        />\r\n                        <InputV2\r\n                            inputCasingStyle=\"input-create\"\r\n                            name=\"Type\"\r\n                            value={Product.type}\r\n                            placeholder=\"\"\r\n                            content=\"Type\"\r\n                            \r\n                        />\r\n                        <InputV2\r\n                            inputCasingStyle=\"input-create\"\r\n                            name=\"Description\"\r\n                            value={Product.description}\r\n                            placeholder=\"\"\r\n                            content=\"Description\"\r\n                            \r\n                            \r\n                        />\r\n                        <div className={classes.currencyWrapper}>          \r\n                            <div className={classes.currencyInput}>\r\n                                <CurrencyFormat\r\n                                className={classes.currency} \r\n                                name=\"Price\"\r\n                                value={Product.price}\r\n                                thousandSeparator={true} \r\n                                prefix={'£'} \r\n                                maxLength=\"7\"\r\n                                />\r\n                                <div className={classes.underline}></div>\r\n                                <label>Price</label>\r\n                            </div>\r\n                        </div>\r\n                        {!Product.reduced ?\r\n                            null\r\n                        :\r\n                            <div className=\"reduced\">\r\n                                <div className={classes.currencyWrapper}>\r\n                                    <div className={classes.currencyInput}>\r\n                                        <CurrencyFormat\r\n                                            className={classes.currency} \r\n                                            name=\"old_price\"\r\n                                            value={Product.old_price}\r\n                                            thousandSeparator={true} \r\n                                            prefix={'£'} \r\n                                            maxLength=\"7\"\r\n                                        />\r\n                                        <div className={classes.underline}></div>\r\n                                        <label>Old Price</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.currencyWrapper}>\r\n                                    <div className={classes.currencyInput}>\r\n                                        <CurrencyFormat\r\n                                            className={classes.currency} \r\n                                            name=\"new_price\"\r\n                                            value={Product.new_price}\r\n                                            thousandSeparator={true} \r\n                                            prefix={'£'} \r\n                                            maxLength=\"7\"\r\n                                        />\r\n                                        <div className={classes.underline}></div>\r\n                                        <label>New Price</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n                <div className={classes.underpageSpace}>\r\n\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default View;","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\CRUD\\Delete.tsx",["239","240"],"import React, { FC, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nimport { RootState } from '../../../store';\r\nimport { deleteproduct, settask } from '../../../store/actions/productActions';\r\nimport classes from \"./stylesheets/Delete.module.scss\";\r\n\r\nconst Delete: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [helperState, setHelperState] = useState(\"\");\r\n    const { error } = useSelector((state: RootState) => state.prod);\r\n    const [loading, setLoading] = useState(false);\r\n    const { id } = useSelector((state: RootState) => state.prod);\r\n    useEffect(() => {\r\n        return () => {\r\n            setHelperState(uuid());\r\n        }\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n\r\n    // }, [id])\r\n\r\n    async function SubmitHandler (){\r\n        setLoading(true);\r\n        dispatch(deleteproduct(id , () => (error)));\r\n        setTimeout(() => {\r\n            dispatch(settask(\"\"));\r\n        }, 1500);\r\n    }\r\n\r\n    const DeclineHandler = () => {\r\n        dispatch(settask(\"\"));\r\n    }\r\n\r\n    return(\r\n        <div className={classes.section}>\r\n            <h2>Are you sure you want to delete this product from the Database?</h2>\r\n            <div className={classes.buttonContainer}>\r\n                <button className={classes.accept} onClick={SubmitHandler} disabled={loading}>Aprove</button>\r\n                <button className={classes.decline} onClick={DeclineHandler}>Decline</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Delete;","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\ProductManagement.tsx",["241","242","243","244"],"import React, { FC,useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { RootState } from '../../store';\r\nimport { settask, setError, setpage } from '../../store/actions/productActions';\r\nimport classes from './stylesheets/ProductManagement.module.scss';\r\n\r\nimport Create from '../UI/CRUD/Create';\r\nimport Update from '../UI/CRUD/Update';\r\nimport View from '../UI/CRUD/View';\r\nimport Delete from '../UI/CRUD/Delete';\r\nimport List from '../UI/CRUD/List';\r\n\r\nconst ProductManagement: FC = () => {\r\n    const { refresh } = useSelector((state: RootState) => state.prod);\r\n    const { task } = useSelector((state: RootState) => state.prod);\r\n    const { error } = useSelector((state: RootState) => state.prod);\r\n    //const { newTask } = useSelector((state: RootState) => state.prod);\r\n    const { product } = useSelector((state: RootState) => state.prod);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n                dispatch(setError(''));\r\n            }\r\n        }\r\n    }, [error, dispatch]);\r\n\r\n    useEffect(() => {\r\n        // if(newTask == task) {\r\n        //     dispatch(settask(\"\"));\r\n        // }else {\r\n        //     dispatch(settask(task));\r\n        // }\r\n        dispatch(settask(\"\"));\r\n        dispatch(setpage(\"ProductManagement\"));\r\n    }, []);\r\n\r\n      switch(task){\r\n          case \"\":\r\n              return(\r\n                  <div>\r\n                        <List/>\r\n                  </div>\r\n              )\r\n              case \" \":\r\n              return(\r\n                  <div>\r\n                        <List/>\r\n                  </div>\r\n              )\r\n          case \"Create\":\r\n              return (\r\n                <div>\r\n                  <Create />\r\n                </div>\r\n              )\r\n          case \"Update\":\r\n              return (\r\n                <div>\r\n                  <Update {...product}/>\r\n                </div>\r\n              )\r\n          case \"View\":\r\n              return (\r\n                  <div>\r\n                      <View {...product} />\r\n                  </div>\r\n              )\r\n          case \"Delete\":\r\n              return (\r\n                  <div>\r\n                      <Delete />\r\n                  </div>\r\n              )\r\n          default: \r\n            return(\r\n                <div>\r\n                    <h1>There was a problem loading the page!</h1>\r\n                </div>\r\n            )\r\n      }\r\n}\r\n\r\nexport default withRouter(ProductManagement);","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Backdrop\\Backdrop.tsx",["245","246","247"],"import Rreact, { FC, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../store';\r\nimport { setbackdrop } from '../../../store/actions/productActions';\r\n\r\nimport classes from'./Backdrop.module.scss';\r\n\r\nconst Backdrop: FC = () => {\r\n    const [nothing, setNothing] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const { backdrop } = useSelector((state: RootState) => state.prod);\r\n\r\n    const backdropHandler = () => {\r\n        //if(backdrop){\r\n            dispatch(setbackdrop(!backdrop))\r\n        // }\r\n        // else{\r\n        //     dispatch(setbackdrop(backdrop))\r\n        // }\r\n    }\r\n\r\n    return(\r\n        <div className={classes.Backdrop} onClick={backdropHandler} >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Backdrop;",["248","249"],"D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\Features\\Features.tsx",["250"],"import React, { FC, useEffect, InputHTMLAttributes, Fragment } from 'react'\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport InputV2 from '../InputV2/InputV2';\r\nimport classes from \"./Features.module.scss\";\r\n\r\ninterface featureProps extends InputHTMLAttributes<HTMLInputElement>{\r\n    number: number\r\n    ids: string\r\n    feats?: string[]  \r\n    featsNumber?: number\r\n    preview: boolean\r\n    update?: boolean\r\n}\r\n\r\nconst Features: FC<featureProps> = ({featsNumber, feats, disabled, ids, number, onBlur, onChange, preview, update}) => {\r\n    useEffect(() => {\r\n\r\n    }, [number])\r\n\r\n    const items = [];\r\n    for(let i=0;i<number;i++){\r\n        items.push(i)\r\n    }\r\n      \r\n    return(\r\n            <div>                \r\n                {featsNumber && feats?\r\n                    feats.map((feat, index )=> {\r\n                        return <InputV2 \r\n                                    id={ids.concat(index.toString())}\r\n                                    inputCasingStyle=\"\"\r\n                                    className=\"feature-input\"\r\n                                    placeholder=\"Enter feature details\" \r\n                                    value={feats[index]}\r\n                                    type=\"text\"\r\n                                    onBlur={onBlur}\r\n                                    onChange={onChange}\r\n                                    content=\"\" \r\n                                    key={index}\r\n                                    disabled\r\n                                />\r\n                    })\r\n                :\r\n                    null\r\n                }\r\n            {!preview && update?\r\n            <Fragment>\r\n                <hr className={classes.divider}></hr>\r\n                <h3>Please re-enter current features if you wish to save them</h3>\r\n            </Fragment>\r\n            :\r\n                    null\r\n            }\r\n            {!preview?\r\n                items.map((feat, index ) => {\r\n                    return <InputV2 \r\n                                id={ids.concat(index.toString())}\r\n                                inputCasingStyle=\"\"\r\n                                className=\"feature-input\"\r\n                                placeholder=\"Enter feature details\" \r\n                                type=\"text\"\r\n                                onBlur={onBlur}\r\n                                onChange={onChange}\r\n                                content=\"\" \r\n                                key={index}\r\n                                disabled={disabled}\r\n                            />\r\n                })\r\n            :\r\n            null\r\n            }\r\n            <br/>\r\n            <br/>\r\n            </div>\r\n        );\r\n    } \r\n\r\nexport default Features;","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\InputV2\\InputV2.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\hooks\\usePagination.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\Browse.tsx",["251"],"import { FC, useEffect } from 'react';\r\nimport { setpage } from '../../store/actions/productActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport classes from './stylesheets/Browse.module.scss';\r\n\r\nconst Browse: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(setpage(\"Browse\"));\r\n    }, []);\r\n    \r\n    return(\r\n        <section className={classes.section}>\r\n            <h2>test</h2>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Browse;","D:\\Uni_Work\\React\\e-com\\src\\components\\pages\\About.tsx",["252","253"],"import { FC, useEffect, useState } from 'react';\r\nimport { setpage } from '../../store/actions/productActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport classes from './stylesheets/About.module.scss';\r\n\r\nconst About: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setpage(\"About\"));\r\n    }, []);\r\n    \r\n    return(\r\n        <section className={classes.section}>\r\n            <h1>test</h1>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default About;","D:\\Uni_Work\\React\\e-com\\src\\components\\auth\\MultiRoute.tsx",[],"D:\\Uni_Work\\React\\e-com\\src\\api\\Products\\agent.ts",["254"],"import axios, { AxiosResponse } from 'axios';\r\n\r\nimport { Product, Stock } from '../../store/types';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_FIREBASE_DB_URL;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(responseBody)\r\n}\r\n\r\nconst Products = {\r\n    list: (): Promise<Product[]> => requests.get('/products.json'),\r\n    details: (id: string) => requests.get(`/products/${id}.json`),\r\n    create: (product: Product) => requests.post('/products.json', product),\r\n    update: (product: Product, id: string) => requests.put(`/products/${id}.json`, product),\r\n    delete: (id: string) => requests.del(`/products/${id}.json`)\r\n}\r\n\r\nconst Stocks = {\r\n    list: (): Promise<Stock[]> => requests.get('/stocks.json'),\r\n    details: (id: string) => requests.get(`/stocks/${id}.json`),\r\n    create: (stock: Stock) => requests.post('/stocks.json', stock),\r\n    update: (stock: Stock, id: string) => requests.put(`/stocks/${id}.json`, stock),\r\n    delete: (id: string) => requests.del(`/stocks/${id}.json`)\r\n}\r\n\r\nexport default {\r\n    Products,\r\n    Stocks\r\n}","D:\\Uni_Work\\React\\e-com\\src\\components\\UI\\ProductTable\\ProductTable.tsx",["255","256","257","258","259","260"],"import React, { FC, Fragment, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport classes from './ProductTable.module.scss';\r\nimport usePagination from '../../../hooks/usePagination';\r\nimport { Product, Stock } from '../../../store/types';\r\nimport { setid, setproduct, settask } from '../../../store/actions/productActions';\r\nimport { RootState } from '../../../store';\r\n\r\ninterface paginationProps {\r\n    data: Stock[] | Product[];\r\n    itemsPerPage: number;\r\n    startFrom: number;\r\n    fields: string[];\r\n    columns: string[];\r\n    stock? : boolean;\r\n}\r\n\r\nconst ProductTable: FC<paginationProps> = ({ data, itemsPerPage, startFrom, fields, columns, stock }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { slicedData, pagination, prevPage, nextPage, changePage } = usePagination({ itemsPerPage, data: data, startFrom });\r\n    const { error } = useSelector((state: RootState) => state.prod);\r\n    const { itemIDs } = useSelector((state: RootState) => state.prod);\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"loadData\")?.click();\r\n    }, [data])\r\n\r\n    const updateProductHandler = (target: Product, i: number) => {\r\n        setLoading(true);\r\n        dispatch(setproduct(target, error));\r\n        dispatch(setid(itemIDs[i]));\r\n        dispatch(settask(\"Update\"));\r\n        setLoading(false)\r\n    }\r\n\r\n    const deleteProductHandler = (i: number) => {\r\n        setLoading(true);\r\n        dispatch(setid(itemIDs[i]));\r\n        dispatch(settask(\"Delete\"));\r\n        setLoading(false)\r\n    }\r\n\r\n    const viewProductHandler = (target: Product) => {\r\n        setLoading(true);\r\n        dispatch(setproduct(target, error));\r\n        dispatch(settask(\"View\"));\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes['table-wrapper']}>\r\n                <table className={!stock? classes.Blue : classes.Lime}>\r\n                    <thead>\r\n                        <tr>\r\n                            {columns.map((item, i) => (\r\n                                <th key={uuid()}>{item}</th>\r\n                            ))}\r\n                            {!stock?\r\n                            <Fragment>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </Fragment>\r\n                            :\r\n                            <Fragment>\r\n                                <th>Manage stock</th>\r\n                            </Fragment>\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {slicedData.map((item, i) => ( console.log(slicedData),\r\n                            <tr key={item.id}>\r\n                                {(fields).map((field, j) => (\r\n                                    ((item[field] || item[field] === false || item[field] === 0|| item[field] == undefined) ? \r\n                                        <td key={uuid()} onClick={(e) => viewProductHandler(item)}>{item[field] == true? \"yes\" : item[field]}</td>\r\n                                        :\r\n                                        null)\r\n                                ))}\r\n                                {/* <td onClick={(e) => viewProductHandler(item)}>{item.type}</td>\r\n                            <td onClick={(e) => viewProductHandler(item)}>{item.reduced? \"Yes\" : \"No\"}</td>\r\n                            <td onClick={(e) => viewProductHandler(item)}>{item.price}</td> */}\r\n                                {!stock? \r\n                                    <Fragment>\r\n                                        <td className={classes.btnCell} onClick={(e) => updateProductHandler(item, i)}>\r\n                                            <button className={classes[\"T-button\"]}>Select</button>\r\n                                        </td>\r\n                                        <td className={classes.btnCell} onClick={(e) => deleteProductHandler(i)}>\r\n                                            <button className={classes[\"T-button\"]}>Select</button>\r\n                                        </td>\r\n                                    </Fragment>\r\n                                : \r\n                                    <Fragment>\r\n                                        <td>\r\n                                            <button>Select</button>\r\n                                        </td>\r\n                                    </Fragment>\r\n                                }\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <nav className={classes.pagination}>\r\n\r\n                <ul className={!stock? classes.listBlue : classes.listLime}>\r\n                    <button className={classes.paginationPrev} onClick={prevPage}>Previous</button>\r\n                    {pagination.map((page, i) => {\r\n                        if (!page.ellipsis) {\r\n                            return <li className={classes.pageContainer} key={page.id}>\r\n                                <button id={page.id == 1 ? \"loadData\" : \" \"} disabled={page.current} className={page.current ? classes.paginationLinkCurrent : classes.paginationLink}\r\n                                    onClick={(e) => changePage(page.id, e)}>\r\n                                    {page.id}\r\n                                </button>\r\n                            </li>\r\n                        } else {\r\n                            return <li className={classes.paginationEllipsis} key={page.id}>\r\n\r\n                            </li>\r\n                        }\r\n                    })}\r\n                    \r\n                    <button className={classes.paginationNext} onClick={nextPage} disabled={data.length==1}>Next</button>\r\n                </ul>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductTable;",{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"261","replacedBy":"265"},{"ruleId":"263","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":30,"column":8,"nodeType":"269","endLine":30,"endColumn":10,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":10,"column":10,"nodeType":"273","messageId":"274","endLine":10,"endColumn":17},{"ruleId":"271","severity":1,"message":"275","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":15},{"ruleId":"271","severity":1,"message":"276","line":7,"column":19,"nodeType":"273","messageId":"274","endLine":7,"endColumn":26},{"ruleId":"271","severity":1,"message":"277","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":18},{"ruleId":"271","severity":1,"message":"278","line":12,"column":13,"nodeType":"273","messageId":"274","endLine":12,"endColumn":17},{"ruleId":"271","severity":1,"message":"279","line":12,"column":19,"nodeType":"273","messageId":"274","endLine":12,"endColumn":35},{"ruleId":"271","severity":1,"message":"280","line":13,"column":13,"nodeType":"273","messageId":"274","endLine":13,"endColumn":17},{"ruleId":"267","severity":1,"message":"268","line":24,"column":8,"nodeType":"269","endLine":24,"endColumn":10,"suggestions":"281"},{"ruleId":"267","severity":1,"message":"268","line":31,"column":8,"nodeType":"269","endLine":31,"endColumn":10,"suggestions":"282"},{"ruleId":"271","severity":1,"message":"283","line":3,"column":23,"nodeType":"273","messageId":"274","endLine":3,"endColumn":34},{"ruleId":"267","severity":1,"message":"268","line":12,"column":8,"nodeType":"269","endLine":12,"endColumn":10,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":14,"column":1,"nodeType":"287","endLine":53,"endColumn":2},{"ruleId":"288","severity":1,"message":"289","line":20,"column":22,"nodeType":"290","messageId":"291","endLine":20,"endColumn":24},{"ruleId":"288","severity":1,"message":"289","line":25,"column":25,"nodeType":"290","messageId":"291","endLine":25,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":32,"column":22,"nodeType":"290","messageId":"291","endLine":32,"endColumn":24},{"ruleId":"288","severity":1,"message":"289","line":36,"column":22,"nodeType":"290","messageId":"291","endLine":36,"endColumn":24},{"ruleId":"271","severity":1,"message":"292","line":18,"column":11,"nodeType":"273","messageId":"274","endLine":18,"endColumn":29},{"ruleId":"288","severity":1,"message":"289","line":31,"column":30,"nodeType":"290","messageId":"291","endLine":31,"endColumn":32},{"ruleId":"288","severity":1,"message":"289","line":35,"column":30,"nodeType":"290","messageId":"291","endLine":35,"endColumn":32},{"ruleId":"288","severity":1,"message":"289","line":39,"column":30,"nodeType":"290","messageId":"291","endLine":39,"endColumn":32},{"ruleId":"288","severity":1,"message":"289","line":43,"column":30,"nodeType":"290","messageId":"291","endLine":43,"endColumn":32},{"ruleId":"288","severity":1,"message":"289","line":47,"column":30,"nodeType":"290","messageId":"291","endLine":47,"endColumn":32},{"ruleId":"271","severity":1,"message":"293","line":1,"column":162,"nodeType":"273","messageId":"274","endLine":1,"endColumn":173},{"ruleId":"285","severity":1,"message":"286","line":17,"column":1,"nodeType":"287","endLine":113,"endColumn":2},{"ruleId":"271","severity":1,"message":"294","line":26,"column":12,"nodeType":"273","messageId":"274","endLine":26,"endColumn":29},{"ruleId":"271","severity":1,"message":"295","line":41,"column":20,"nodeType":"273","messageId":"274","endLine":41,"endColumn":29},{"ruleId":"271","severity":1,"message":"296","line":49,"column":11,"nodeType":"273","messageId":"274","endLine":49,"endColumn":18},{"ruleId":"267","severity":1,"message":"297","line":57,"column":8,"nodeType":"269","endLine":57,"endColumn":10,"suggestions":"298"},{"ruleId":"288","severity":1,"message":"289","line":105,"column":34,"nodeType":"290","messageId":"291","endLine":105,"endColumn":36},{"ruleId":"271","severity":1,"message":"299","line":265,"column":56,"nodeType":"273","messageId":"274","endLine":265,"endColumn":61},{"ruleId":"271","severity":1,"message":"299","line":294,"column":68,"nodeType":"273","messageId":"274","endLine":294,"endColumn":73},{"ruleId":"271","severity":1,"message":"299","line":314,"column":68,"nodeType":"273","messageId":"274","endLine":314,"endColumn":73},{"ruleId":"271","severity":1,"message":"300","line":23,"column":10,"nodeType":"273","messageId":"274","endLine":23,"endColumn":17},{"ruleId":"267","severity":1,"message":"268","line":31,"column":6,"nodeType":"269","endLine":31,"endColumn":8,"suggestions":"301"},{"ruleId":"267","severity":1,"message":"302","line":42,"column":6,"nodeType":"269","endLine":42,"endColumn":21,"suggestions":"303"},{"ruleId":"271","severity":1,"message":"294","line":21,"column":12,"nodeType":"273","messageId":"274","endLine":21,"endColumn":29},{"ruleId":"271","severity":1,"message":"304","line":34,"column":18,"nodeType":"273","messageId":"274","endLine":34,"endColumn":25},{"ruleId":"271","severity":1,"message":"295","line":36,"column":20,"nodeType":"273","messageId":"274","endLine":36,"endColumn":29},{"ruleId":"271","severity":1,"message":"305","line":42,"column":36,"nodeType":"273","messageId":"274","endLine":42,"endColumn":60},{"ruleId":"267","severity":1,"message":"306","line":61,"column":8,"nodeType":"269","endLine":61,"endColumn":10,"suggestions":"307"},{"ruleId":"271","severity":1,"message":"299","line":251,"column":60,"nodeType":"273","messageId":"274","endLine":251,"endColumn":65},{"ruleId":"271","severity":1,"message":"299","line":279,"column":72,"nodeType":"273","messageId":"274","endLine":279,"endColumn":77},{"ruleId":"271","severity":1,"message":"299","line":298,"column":72,"nodeType":"273","messageId":"274","endLine":298,"endColumn":77},{"ruleId":"271","severity":1,"message":"308","line":1,"column":8,"nodeType":"273","messageId":"274","endLine":1,"endColumn":14},{"ruleId":"271","severity":1,"message":"309","line":1,"column":22,"nodeType":"273","messageId":"274","endLine":1,"endColumn":31},{"ruleId":"271","severity":1,"message":"310","line":16,"column":19,"nodeType":"273","messageId":"274","endLine":16,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":29,"column":38,"nodeType":"290","messageId":"291","endLine":29,"endColumn":40},{"ruleId":"271","severity":1,"message":"311","line":1,"column":21,"nodeType":"273","messageId":"274","endLine":1,"endColumn":29},{"ruleId":"271","severity":1,"message":"312","line":1,"column":42,"nodeType":"273","messageId":"274","endLine":1,"endColumn":51},{"ruleId":"271","severity":1,"message":"313","line":3,"column":16,"nodeType":"273","messageId":"274","endLine":3,"endColumn":20},{"ruleId":"271","severity":1,"message":"296","line":18,"column":11,"nodeType":"273","messageId":"274","endLine":18,"endColumn":18},{"ruleId":"271","severity":1,"message":"296","line":12,"column":11,"nodeType":"273","messageId":"274","endLine":12,"endColumn":18},{"ruleId":"271","severity":1,"message":"314","line":14,"column":12,"nodeType":"273","messageId":"274","endLine":14,"endColumn":23},{"ruleId":"271","severity":1,"message":"311","line":1,"column":20,"nodeType":"273","messageId":"274","endLine":1,"endColumn":28},{"ruleId":"271","severity":1,"message":"315","line":7,"column":8,"nodeType":"273","messageId":"274","endLine":7,"endColumn":15},{"ruleId":"271","severity":1,"message":"316","line":16,"column":13,"nodeType":"273","messageId":"274","endLine":16,"endColumn":20},{"ruleId":"267","severity":1,"message":"268","line":39,"column":8,"nodeType":"269","endLine":39,"endColumn":10,"suggestions":"317"},{"ruleId":"271","severity":1,"message":"308","line":1,"column":8,"nodeType":"273","messageId":"274","endLine":1,"endColumn":14},{"ruleId":"271","severity":1,"message":"318","line":9,"column":12,"nodeType":"273","messageId":"274","endLine":9,"endColumn":19},{"ruleId":"271","severity":1,"message":"319","line":9,"column":21,"nodeType":"273","messageId":"274","endLine":9,"endColumn":31},{"ruleId":"261","replacedBy":"320"},{"ruleId":"263","replacedBy":"321"},{"ruleId":"271","severity":1,"message":"313","line":2,"column":16,"nodeType":"273","messageId":"274","endLine":2,"endColumn":20},{"ruleId":"267","severity":1,"message":"268","line":13,"column":8,"nodeType":"269","endLine":13,"endColumn":10,"suggestions":"322"},{"ruleId":"271","severity":1,"message":"311","line":1,"column":25,"nodeType":"273","messageId":"274","endLine":1,"endColumn":33},{"ruleId":"267","severity":1,"message":"268","line":12,"column":8,"nodeType":"269","endLine":12,"endColumn":10,"suggestions":"323"},{"ruleId":"285","severity":1,"message":"324","line":32,"column":1,"nodeType":"287","endLine":35,"endColumn":2},{"ruleId":"271","severity":1,"message":"325","line":21,"column":12,"nodeType":"273","messageId":"274","endLine":21,"endColumn":19},{"ruleId":"326","severity":1,"message":"327","line":76,"column":79,"nodeType":"328","messageId":"329","endLine":76,"endColumn":80},{"ruleId":"288","severity":1,"message":"289","line":79,"column":111,"nodeType":"290","messageId":"291","endLine":79,"endColumn":113},{"ruleId":"288","severity":1,"message":"289","line":80,"column":113,"nodeType":"290","messageId":"291","endLine":80,"endColumn":115},{"ruleId":"288","severity":1,"message":"289","line":115,"column":53,"nodeType":"290","messageId":"291","endLine":115,"endColumn":55},{"ruleId":"288","severity":1,"message":"289","line":127,"column":104,"nodeType":"290","messageId":"291","endLine":127,"endColumn":106},"no-native-reassign",["330"],"no-negated-in-lhs",["331"],["330"],["331"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["332"],"@typescript-eslint/no-unused-vars","'setpage' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'settask' is defined but never used.","'Redirect' is defined but never used.","'user' is assigned a value but never used.","'needVerification' is assigned a value but never used.","'task' is assigned a value but never used.",["333"],["334"],"'useSelector' is defined but never used.",["335"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'logoutClickHandler' is assigned a value but never used.","'SET_LOADING' is defined but never used.","'validationLoading' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'feature_array'. Either include them or remove the dependency array.",["336"],"'value' is assigned a value but never used.","'stockID' is assigned a value but never used.",["337"],"React Hook useEffect has missing dependencies: 'dispatch' and 'itemID'. Either include them or remove the dependency array.",["338"],"'setType' is assigned a value but never used.","'setFeatureArray_existing' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'feature_array_existing.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFeatures' needs the current value of 'feature_array_existing.length'.",["339"],"'Rreact' is defined but never used.","'useEffect' is defined but never used.","'setStyle' is assigned a value but never used.","'useState' is defined but never used.","'FormEvent' is defined but never used.","'uuid' is defined but never used.","'helperState' is assigned a value but never used.","'classes' is defined but never used.","'refresh' is assigned a value but never used.",["340"],"'nothing' is assigned a value but never used.","'setNothing' is assigned a value but never used.",["330"],["331"],["341"],["342"],"Assign object to a variable before exporting as module default","'loading' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"343","fix":"344"},{"desc":"343","fix":"345"},{"desc":"343","fix":"346"},{"desc":"343","fix":"347"},{"desc":"348","fix":"349"},{"desc":"343","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"343","fix":"355"},{"desc":"343","fix":"356"},{"desc":"343","fix":"357"},"Update the dependencies array to be: [dispatch]",{"range":"358","text":"359"},{"range":"360","text":"359"},{"range":"361","text":"359"},{"range":"362","text":"359"},"Update the dependencies array to be: [dispatch, feature_array]",{"range":"363","text":"364"},{"range":"365","text":"359"},"Update the dependencies array to be: [dispatch, itemID, product_array]",{"range":"366","text":"367"},"Update the dependencies array to be: [feature_array_existing.length]",{"range":"368","text":"369"},{"range":"370","text":"359"},{"range":"371","text":"359"},{"range":"372","text":"359"},[1070,1072],"[dispatch]",[865,867],[1064,1066],[362,364],[2623,2625],"[dispatch, feature_array]",[1225,1227],[1547,1562],"[dispatch, itemID, product_array]",[2785,2787],"[feature_array_existing.length]",[1419,1421],[349,351],[350,352]]